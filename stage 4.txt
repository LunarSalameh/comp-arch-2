module stage_4(L3_x1,L3_x2,L3_x3,L3_x4,clk,CRC,poly,poly_s4,In,In_s4);
  
  input [31:0] L3_x1,L3_x2,L3_x3,L3_x4;
  input clk;
  output reg [31:0] CRC;
  input [31:0] poly;
  output reg [31:0] poly_s4;
  input [7:0] In;
  output reg [7:0] In_s4;
  
  always @(posedge clk)
    begin 
       CRC <=L3_x1^L3_x2^L3_x3^L3_x4;
       poly_s4<=poly;// forwarding 
       In_s4<=In; // forwarding In
    end
 
endmodule

module TB_1();
   reg [31:0] L3_x1,L3_x2,L3_x3,L3_x4;
  reg clk;
  wire [31:0] CRC;
  reg [31:0] poly;
  wire [31:0] poly_s4;
  reg [7:0] In;
  wire [7:0] In_s4;
  
stage_4 s4(L3_x1,L3_x2,L3_x3,L3_x4,clk,CRC,poly,poly_s4,In,In_s4);  
  always #1 clk = ~clk; 
  initial 
    begin 
      In=8'b11001110;
      poly=32'hffaaccee;
      
      L3_x1=32'h00000002;
      L3_x2=32'h0000000c;
      L3_x3=32'h00000000;
      L3_x4=32'h000000c0;
    end
  initial
    begin 
      #1 $display("input = %b  \n", In);
      #1 $display("poly = %h  \n", poly);

      
      #1 $display("L1_x1 = %h " , L3_x1);
      #1 $display("L1_x2 = %h " , L3_x2);
      #1 $display("L1_x3 = %h " , L3_x3);
      #1 $display("L1_x4 = %h " , L3_x4);
      
      #2 $finish;
      
    end
endmodule